@model sapra.ViewModels.MapLayerListViewModel
@{
	ViewData["Title"] = "Zonificación";
}
<style>
    .map {
	    padding: 0;
	    margin: 0;
	    width: 100% !important;
	    height: 100% !important;
    }

    .full {
	    height: calc(100% - 56px);
	    margin: 0 !important;
    }

	.esri-view .esri-view-surface--inset-outline:focus::after {
		outline: none !important;
	}

	.esri-layer-list__item .esri-layer-list__item-container {
		border: none !important;
		outline: none !important;
	}
</style>

<div id="mapDiv" class="map"></div>
<script>
    displayLayout();
    require([
        "esri/Map",
        "esri/views/MapView",
        "esri/layers/Layer",
        "esri/layers/FeatureLayer",
        "esri/widgets/Search",
        "esri/widgets/LayerList",
        ],
        function (Map, MapView, Layer, FeatureLayer, Search, LayerList) {
            function dialogFunction(feature) {
                var div = document.createElement("div");
                var flexElement;
                @foreach (MapLayerField field in Model.Layers[0].MapLayerFields) 
                {
                    @:flexElement = decodeHtml("@field.Name");
                    @:if (feature.graphic.attributes[flexElement] != undefined && feature.graphic.attributes[flexElement] != 0)
                    {    
                        @if(field.Type == MapLayerField.NumberField)
					    {
                            @:div.innerHTML += "<b>@field.Alias:</b> " + feature.graphic.attributes[flexElement].toFixed(0) + "<br>";
					    }
					    else if(field.Type == MapLayerField.DoubleField)
                        {
                        @:if (Math.round(feature.graphic.attributes[flexElement]) !== feature.graphic.attributes[flexElement]){
                            @:div.innerHTML += "<b>@field.Alias:</b> " + feature.graphic.attributes[flexElement].toFixed(2) + "<br>";
                        @:}else {
                            @:div.innerHTML += "<b>@field.Alias:</b> " + feature.graphic.attributes[flexElement] + "<br>";
                        @:}
                        
                        }
                    }
                }
                ;
                div.innerHTML += "<br>" + 
                "<button type='submit' class='btn btn-primary bg-color1 rounded-0'><i class='btn-has-text fa fa-search'></i>" +
                    "Consultar" + "<br>" + 
                    "</button>";
                return div;
            };
        
        var map = new Map({
            basemap: "osm"
        });

        var layersURL = [];
        var layersName = [];

        @foreach (MapLayer mapLayer in Model.Layers) 
        {
        @:layersURL.push("@Model.BaseUrl@mapLayer.URL");
        @:layersName.push(decodeHtml("@mapLayer.Name"));
        }

        layersURL.reverse();
        layersName.reverse();

		// for each layer of the system, add layer
		// add to the controls to switch beetwen layers
        for (x = 0; x < layersURL.length; x++) {
            var layer = new FeatureLayer({
                url: layersURL[x],
                outFields: ["*"]
            });

            if (x == (layersURL.length - 1)) {
                // Catastro layer is a "special one"..

                var popupTemplate = {
                    // autocasts as new PopupTemplate()
                    title: "Catastro",
                    outFields: ["*"],
                    content: dialogFunction,
                    fieldInfos:
                        [
                        @foreach (MapLayerField field in Model.Layers[0].MapLayerFields)
					    { 
                            @:{
                            @:  fieldName: decodeHtml("@field.Name")
                            @if(field.Type == MapLayerField.NumberField){
                            @:  ,format: { digitSeparator: true, places: 2 }
                            } 
                            @:},
                        }
                    ]
                };

                layer.popupTemplate = popupTemplate;

            }

            map.add(layer);
        }

        // Views 
        var view = new MapView({
            container: "mapDiv",
            map: map,
            center: [-84.217, 10.012],
            zoom: 14,
            highlightOptions: {
                color: "orange",
                haloOpacity: 0.9,
                fillOpacity: 0.2
            },
            popup: { 
                autoOpenEnabled: true 
            } 
        });

        // Seach Widget
        var search = new Search({
            view: view
        });

        // Layers Widget
        var layersWidget = new LayerList({
          view: view
        });

        // Coords Widget
        var coordsWidget = document.createElement("div");
        coordsWidget.id = "coordsWidget";
        coordsWidget.className = "esri-widget esri-component";
        coordsWidget.style.padding = "7px 15px 5px";

        function showCoordinates(pt) {
            var coords = "Latitud/Longitud " + pt.latitude.toFixed(3) + " " + pt.longitude.toFixed(3) + 
                " | Escala 1:" + Math.round(view.scale * 1) / 1 +
                " | Zoom " + view.zoom;
            coordsWidget.innerHTML = coords;
        }

        view.watch(["stationary"], function() {
            showCoordinates(view.center);
        });

        view.on(["pointer-down","pointer-move"], function(evt) {
            showCoordinates(view.toMap({ x: evt.x, y: evt.y }));
        });

        // Add to Map Result
        view.ui.add([
            {
                component: coordsWidget,
                position: "bottom-right",
            },
            {
                component: layersWidget,
                position: "top-left",
                index: 0
            },
            {
                component: search,
                position: "top-right",
            }
        ]);

        view.when(function () {
            setTimeout(function(){
                $('.esri-search__input').attr("placeholder", "Buscar lugares o direcciones...");
            }, 750);

        }); 

    });

</script>